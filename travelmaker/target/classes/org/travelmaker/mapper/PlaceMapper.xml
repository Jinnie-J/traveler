<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.travelmaker.mapper.PlaceMapper">
		
      <resultMap type="org.travelmaker.domain.PlaceVO" id="placeVO">
         <result property="plcNo" column="PLC_NO"/>
         <result property="regionNo" column="REGION_NO"/>
         <result property="plcTitle" column="PLC_TITLE"/>
         <result property="lat" column="LAT"/>
         <result property="lng" column="LNG"/>
         <result property="addressDt" column="ADDRESS_DT"/>
         <result property="pCate" column="P_CATE"/>
         <result property="holiday" column="HOLIDAY"/>
         <result property="openingH" column="OPENING_H"/>
         <result property="likeCnt" column="LIKECNT"/>
         <result property="plcImg" column="PLC_IMG"/>
      </resultMap>
	
   <resultMap type="org.travelmaker.domain.PlaceDTO" id="placeDTO">
      <result property="plcNo" column="PLC_NO" />
      <result property="themeName" column="CODE_NAME" />
      <result property="plcTitle" column="PLC_TITLE" />
      <result property="themeNo" column="THEME_NO" />
   </resultMap>
<!-- 순규매퍼  -->   
<insert id="insert">
   insert into PLACE (plc_no,region_no,plc_title,lat,lng,ADDRESS_DT,p_cate,holiday,opening_h)
   values(#{plcNo},#{regionNo},#{plcTitle},#{lat},#{lng},#{addressDt},#{PCate},#{holiday},#{openingH})
</insert>   

<select id="read" resultMap="placeVO">
   select * from PLACE where plc_no in <foreach item="item" index="plcNo" collection="array"
      open="(" separator="," close=")">
        #{item}
  </foreach>
</select>
<!--plc_no = #{plcNo} 선택된 plcNo를 in 으로 고쳐서  plc_no in( #{plcNo} ) 
콤마로 문자열로 만들어서 주기-->

<delete id="delete">
   delete from PLACE where plc_no = #{plcNo}
</delete>

<update id="update">
   update PLACE
    set region_no = #{regionNo},
    plc_title = #{plcTitle},
    lat = #{lat},
    lng = #{lng},
    p_cate = #{pCate},
    holiday = #{holiday},
    opening_h = #{openingH}
   where plc_no = #{plcNo}

</update>

<select id="getListWithPaging" resultMap="placeVO">
<![CDATA[
      select
         *
         from
         (
         select
            rownum rn,p.plc_no,p.region_no,p.plc_title,p.lat,p.lng,p.address_dt,p.p_cate,p.holiday,p.opening_h,p.likecnt,p.PLC_IMG
         from
         place p, pick_pl pl
         where p.plc_no = pl.plc_no 
         and pl.mem_no = #{memNo}
         and rownum <= #{pageNum} * #{amount}
         )
         where rn > (#{pageNum} -1) * #{amount}  
]]>
</select>

<update id="upCnt">

UPDATE place SET likecnt = likecnt +1 where plc_no = #{plcNo}
</update>

<update id="downCnt">

UPDATE place SET likecnt = likecnt -1 where plc_no = #{plcNo}
</update>

<select id="getSortList" resultMap="placeVO">
<![CDATA[
   select *
    from (
    select rownum no,a.*
    from
(select 
        p.plc_no,p.region_no,p.plc_title,p.lat,p.lng,p.address_dt,p.p_cate,p.holiday,p.opening_h,p.likecnt,p.PLC_IMG
        from place p,pick_pl pl
        where p.plc_no = pl.plc_no 
         and pl.mem_no = #{memNo}
            order by case when #{selected}='old' then pl.pp_date end asc,
            case when #{selected}='new' then pl.pp_date end desc,
            case when #{selected}='like' then p.likecnt end desc,
            p.plc_no desc
             )a
            where rownum <= #{pageNum} * #{amount}
            )
            where no >= (#{pageNum} -1) *#{amount}+1 
]]>
</select>


<select id="getTotal" resultType="int">

select count(*) from place p, pick_pl pl
         where p.plc_no = pl.plc_no 
         and pl.mem_no = #{memNo}

</select>


<!-- 종운 매퍼 -->
<!-- 제목으로 검색하는 기능 페이징 기능 추가 -->
<select id="getListWithTitle" resultMap="placeVO">
   <![CDATA[
   select *
    from (
    select rownum no,rs.*
    from (select * from place
    where region_no = #{regionNo}
    and plc_title like '%'||#{plcTitle}||'%'
            )rs
            where rownum <= #{pageNum} * #{amount}
            )
            where no >= (#{pageNum} -1) *#{amount}+1 
   ]]>
</select>

<select id="getSearchResultTotalCnt" resultType="int">

   select count(*) 
   from (select * 
      from place 
      where region_no = #{regionNo}
       and plc_title like '%'||#{plcTitle}||'%')

</select>

<select id="getListWithTheme" resultMap="placeDTO">  
<![CDATA[
	SELECT *
	FROM (   SELECT TPLC.THEME_NO, P.PLC_NO , P.PLC_TITLE, CTB.CODE_NAME
   FROM THEME_PLC TPLC,  PLACE P, CODE_TABLE CTB
   WHERE TPLC.THEME_NO = (SELECT THEME_NO
   FROM THEME T
   WHERE T.REGION_NO = #{regionNo}
   AND THEME_CODE = #{themeCode})
   AND TPLC.PLC_NO = P.PLC_NO
   AND CONCAT(CTB.CODE_TYPE_ID,CTB.CODE) = #{themeCode}
   ORDER BY DBMS_RANDOM.VALUE)
   WHERE ROWNUM<16
   ORDER BY PLC_TITLE]]>
</select>
<select id="getPlaceByWeather" resultMap="placeVO">
<![CDATA[
SELECT *
FROM (SELECT *
FROM PLACE
WHERE P_CATE IN (SELECT CODE
FROM WEATHER_REC
WHERE REC_INDEX=1)
AND REGION_NO =#{regionNo}
ORDER BY DBMS_RANDOM.VALUE)
WHERE ROWNUM<16]]>
</select>


<!-- 리뷰 내용 11/25
하드 코딩한 거 밖으로 옮기기,
and theme_code = 'C001') -> and theme_code = #{themeNum})
 mapper들어오기전에 -->

<select id="getYourList" resultType="hashMap">
<![CDATA[
      SELECT a.*,(case when (select count(*) from pick_pl where pick_pl.mem_no = #{memNo} and a.plc_no = pick_pl.plc_no )= 1 then 'heartbtn btn_like btn_unlike'
    else 'heartbtn btn_like' END) as checked FROM
   ( SELECT distinct p.* FROM pick_pl pl, TRAVEL_TYPE_TABLE ttt,THEME tm,THEME_PLC tmp ,place p
   where ttt.travel_type like #{type}
   and tm.theme_code = ttt.theme_code
   and tmp.theme_no =  tm.theme_no
   and p.plc_no = tmp.plc_no
   ORDER BY dbms_random.value )a
   WHERE rownum <= 3
   ]]>
</select>



</mapper>
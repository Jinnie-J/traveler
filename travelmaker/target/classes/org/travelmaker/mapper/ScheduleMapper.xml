<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace ="org.travelmaker.mapper.ScheduleMapper">

<resultMap type="org.travelmaker.domain.ScheduleVO" id="ScheduleResult">
	<result property="schNo" column="sch_no"/>
	<result property="memNo" column="mem_no"/>
	<result property="schTitle" column="sch_title"/>
	<result property="fromDate" column="from_date"/>
	<result property="toDate" column="to_date"/>
	<result property="img" column="img"/>
	<result property="schRegDate" column="sch_reg_date"/>
	<result property="schLastDate" column="sch_last_date"/>
	<result property="schStatus" column="sch_status"/>
	<result property="memo" column="memo"/>
	<result property="schRegion" column="sch_region"/>


</resultMap>


<select id="getList" resultMap="ScheduleResult">
<![CDATA[
	select * from schedule
]]>
</select>

<select id="getListSchedule" resultMap="ScheduleResult">
<![CDATA[
	select sch_no, mem_no, sch_Title, from_date, to_date, sch_status, memo, sch_region
	from schedule
	where sch_no = #{schNo}
]]>
</select>

<insert id="insert">
	insert into schedule (sch_no,mem_no, sch_title, from_date, to_date, sch_status, memo, sch_region)
	values (sch.seq.nextval #{memNo}, #{schTitle}, #{fromDate},#{toDate},#{schStatus}, #{memo},#{schRegion})
</insert>

<insert id="insertSelectKey">
	<selectKey keyProperty="schNo" order="BEFORE" resultType="long">
		select sch.seq.nextval from dual
	</selectKey>
	insert into schedule (sch_no, sch_title, from_date, to_date, sch_status,memo, sch_region)
	values (sch.seq.nextval,#{schTitle},#{fromDate}, #{toDate}, #{schStatus}, #{memo},#{schRegion})
</insert>

<select id="read" resultMap="ScheduleResult">
	select * from schedule where sch_no=#{schNo} 
</select>

<delete id="delete">
	delete from schedule where sch_no = #{schNo}
</delete>

<update id="update">
	update schedule
	set mem_no=#{memNo}, sch_title= #{schTitle},from_date =#{fromDate}, to_date=#{toDate}, sch_last_date= sysdate,
	sch_status = #{schStatus}, memo= #{memo}, sch_region=#{schRegion} where sch_no = #{schNo}
</update>
<select id="getListWithPaging" resultMap="ScheduleResult">
<![CDATA[
		select
			*
			from
			(
			select
				rownum rn,s.sch_no,s.mem_no,s.sch_title,s.from_date,s.to_date,s.img,s.sch_reg_date,s.sch_last_date,s.sch_status,s.memo,s.sch_region
			from
			schedule s, pick_sch pl
			where s.sch_no = pl.sch_no 
			and pl.mem_no = #{memNo}
			and rownum <= #{pageNum} * #{amount}
			)
			where rn > (#{pageNum} -1) * #{amount}  
]]>



</select>

<update id="upCnt">

UPDATE schedule SET likecnt = likecnt +1 where plc_no = #{plc_no}
</update>

<update id="downCnt">

UPDATE schedule SET likecnt = likecnt -1 where plc_no = #{plc_no}
</update>
		
		<select id="getPastSch" resultMap="ScheduleResult">
		<![CDATA[
		select
			*
			from
			(
			select
				rownum rn,s.sch_no,s.mem_no,s.sch_title,s.from_date,s.to_date,s.img,s.sch_reg_date,s.sch_last_date,s.sch_status,s.memo,s.sch_region
			from
			schedule s, pick_sch pl
			where s.to_date < TO_CHAR(SYSDATE,'YY/MM/DD')
			and s.sch_no = pl.sch_no 
			and pl.mem_no = #{memNo}
			and rownum <= #{pageNum} * #{amount}
			)
			where rn > (#{pageNum} -1) * #{amount}  
]]>
		</select>
		
		<select id="getUpCommingSch" resultMap="ScheduleResult">
		<![CDATA[
		select
			*
			from
			(
			select
				rownum rn,s.sch_no,s.mem_no,s.sch_title,s.from_date,s.to_date,s.img,s.sch_reg_date,s.sch_last_date,s.sch_status,s.memo,s.sch_region
			from
			schedule s, pick_sch pl
			where s.to_date > TO_CHAR(SYSDATE,'YY/MM/DD')
			and s.sch_no = pl.sch_no 
			and pl.mem_no = #{memNo}
			and rownum <= #{pageNum} * #{amount}
			)
			where rn > (#{pageNum} -1) * #{amount}  
]]>
		</select>
		
		<select id="getTotalCount" resultType="int">
		
		select count(*) from
		schedule s, pick_sch pl
			where s.sch_no = pl.sch_no 
			and pl.mem_no = #{memNo}
		
		</select>
		
		<select id="getPastTotal" resultType="int">
				<![CDATA[
		select count(*) from
		schedule s, pick_sch pl
			where s.sch_no = pl.sch_no 
			and pl.mem_no = #{memNo}
			and s.to_date < TO_CHAR(SYSDATE,'YY/MM/DD')
		]]>
		</select>
		
		
		<select id="getCommingTotal" resultType="int">
				<![CDATA[
		select count(*) from
		schedule s, pick_sch pl
			where s.sch_no = pl.sch_no 
			and pl.mem_no = #{memNo}
			and s.to_date > TO_CHAR(SYSDATE,'YY/MM/DD')
		]]>
		</select>

</mapper>